{"version":3,"sources":["../src/args.js"],"names":["parse","args","output","array","i","length","arg","concat","slice","push","filename","argv","options","console","log","util","format","path","basename","process","exit"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AAEjB,MAAIC,MAAM,GAAG,KAAb;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9B,QAAIE,GAAG,GAAGL,IAAI,CAACG,CAAD,CAAd;;AAEA,YAAQE,GAAR;AACI,WAAK,IAAL;AACIJ,QAAAA,MAAM,GAAG,IAAT;AACA;;AAEJ;AACI,YAAII,GAAG,KAAK,IAAZ,EAAkB;AACdH,UAAAA,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAaN,IAAI,CAACO,KAAL,CAAW,EAAEJ,CAAb,CAAb,CAAR;AACAA,UAAAA,CAAC,GAAGH,IAAI,CAACI,MAAT;AACH,SAHD,MAGO,IAAIC,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AACvB,iBAAO,KAAP;AACH,SAFM,MAEA;AACHH,UAAAA,KAAK,CAACM,IAAN,CAAWH,GAAX;AACH;;AACD;AAdR;AAgBH;;AAED,MAAIH,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACpB,WAAO,KAAP;AACH;;AAED,SAAO;AACHK,IAAAA,QAAQ,EAAEP,KAAK,CAAC,CAAD,CADZ;AAEHD,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH;;AAEc,kBAASS,IAAT,EAAe;AAC1B,QAAMC,OAAO,GAAGZ,KAAK,CAACW,IAAI,CAACH,KAAL,CAAW,CAAX,CAAD,CAArB;;AACA,MAAII,OAAO,IAAI,KAAf,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,cAAKC,MAAL,CAAY,gCAAZ,EAA8CC,cAAKC,QAAL,CAAcP,IAAI,CAAC,CAAD,CAAlB,CAA9C,CAAZ;AACAQ,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;;AACD,SAAOR,OAAP;AACH","sourcesContent":["import util from 'util';\nimport path from 'path';\n\nfunction parse(args) {\n\n    let output = false;\n    let array = [];\n\n    for (let i=0; i<args.length; i++) {\n        let arg = args[i];\n\n        switch (arg) {\n            case '-o':\n                output = true;\n                break;\n\n            default:\n                if (arg === '--') {\n                    array = array.concat(args.slice(++i));\n                    i = args.length;\n                } else if (arg[0] === '-') {\n                    return false;\n                } else {\n                    array.push(arg);\n                }\n                break;\n        }\n    }\n\n    if (array.length !== 1) {\n        return false;\n    }\n\n    return {\n        filename: array[0],\n        output: output,\n    };\n}\n\nexport default function(argv) {\n    const options = parse(argv.slice(2));\n    if (options == false) {\n        console.log(util.format('Usage: %s [-o] <markdown file>', path.basename(argv[1])));\n        process.exit(1);\n    }\n    return options;\n}\n"],"file":"args.js"}