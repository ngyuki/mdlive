{"version":3,"sources":["../src/args.js"],"names":["parse","args","array","output","port","i","length","arg","parseInt","concat","slice","push","filename","argv","options","console","log","util","format","path","basename","process","exit"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AAEjB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,MAAM,GAAG,KAAb;AACA,MAAIC,IAAI,GAAG,KAAX;;AAEA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,IAAI,CAACK,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9B,QAAIE,GAAG,GAAGN,IAAI,CAACI,CAAD,CAAd;;AAEA,YAAQE,GAAR;AACI,WAAK,IAAL;AACIJ,QAAAA,MAAM,GAAG,IAAT;AACA;;AAEJ,WAAK,IAAL;AACIC,QAAAA,IAAI,GAAGI,QAAQ,CAACP,IAAI,CAAC,EAAEI,CAAH,CAAL,CAAf;;AACA,YAAI,CAACD,IAAL,EAAW;AACP,iBAAO,KAAP;AACH;;AACD;;AAEJ;AACI,YAAIG,GAAG,KAAK,IAAZ,EAAkB;AACdL,UAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAaR,IAAI,CAACS,KAAL,CAAW,EAAEL,CAAb,CAAb,CAAR;AACAA,UAAAA,CAAC,GAAGJ,IAAI,CAACK,MAAT;AACH,SAHD,MAGO,IAAIC,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AACvB,iBAAO,KAAP;AACH,SAFM,MAEA;AACHL,UAAAA,KAAK,CAACS,IAAN,CAAWJ,GAAX;AACH;;AACD;AArBR;AAuBH;;AAED,MAAIL,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACpB,WAAO,KAAP;AACH;;AAED,SAAO;AACHM,IAAAA,QAAQ,EAAEV,KAAK,CAAC,CAAD,CADZ;AAEHC,IAAAA,MAAM,EAAEA,MAFL;AAGHC,IAAAA,IAAI,EAAEA;AAHH,GAAP;AAKH;;AAEc,kBAASS,IAAT,EAAe;AAC1B,QAAMC,OAAO,GAAGd,KAAK,CAACa,IAAI,CAACH,KAAL,CAAW,CAAX,CAAD,CAArB;;AACA,MAAII,OAAO,IAAI,KAAf,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,cAAKC,MAAL,CAAY,4CAAZ,EAA0DC,cAAKC,QAAL,CAAcP,IAAI,CAAC,CAAD,CAAlB,CAA1D,CAAZ;AACAQ,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;;AACD,SAAOR,OAAP;AACH","sourcesContent":["import util from 'util';\nimport path from 'path';\n\nfunction parse(args) {\n\n    let array = [];\n    let output = false;\n    let port = 25485;\n\n    for (let i=0; i<args.length; i++) {\n        let arg = args[i];\n\n        switch (arg) {\n            case '-o':\n                output = true;\n                break;\n\n            case '-p':\n                port = parseInt(args[++i]);\n                if (!port) {\n                    return false;\n                }\n                break;\n\n            default:\n                if (arg === '--') {\n                    array = array.concat(args.slice(++i));\n                    i = args.length;\n                } else if (arg[0] === '-') {\n                    return false;\n                } else {\n                    array.push(arg);\n                }\n                break;\n        }\n    }\n\n    if (array.length !== 1) {\n        return false;\n    }\n\n    return {\n        filename: array[0],\n        output: output,\n        port: port,\n    };\n}\n\nexport default function(argv) {\n    const options = parse(argv.slice(2));\n    if (options == false) {\n        console.log(util.format('Usage: %s [-o] [-p <port>] <markdown file>', path.basename(argv[1])));\n        process.exit(1);\n    }\n    return options;\n}\n"],"file":"args.js"}