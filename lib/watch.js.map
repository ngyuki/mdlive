{"version":3,"sources":["../src/watch.js"],"names":["filename","callback","watcher","chokidar","watch","persistent","ignoreInitial","depth","realpath","fs","realpathSync","on","event","console","log","err"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,kBAASA,QAAT,EAAmBC,QAAnB,EAA6B;AAExC,QAAMC,OAAO,GAAGC,kBAASC,KAAT,CAAe,GAAf,EAAoB;AAChCC,IAAAA,UAAU,EAAE,IADoB;AAEhCC,IAAAA,aAAa,EAAE,IAFiB;AAGhCC,IAAAA,KAAK,EAAE;AAHyB,GAApB,CAAhB;;AAMA,QAAMC,QAAQ,GAAGC,YAAGC,YAAH,CAAgBV,QAAhB,CAAjB;;AAEAE,EAAAA,OAAO,CAACS,EAAR,CAAW,KAAX,EAAkB,CAACC,KAAD,EAAQZ,QAAR,KAAqB;AACnCa,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmBZ,QAAnB;;AACA,QAAI;AACA,UAAIQ,QAAQ,KAAKC,YAAGC,YAAH,CAAgBV,QAAhB,CAAjB,EAA4C;AACxCC,QAAAA,QAAQ,CAACD,QAAD,CAAR;AACH;AACJ,KAJD,CAIE,OAAOe,GAAP,EAAY,CACV;AACH;AACJ,GATD;AAUH","sourcesContent":["import fs from 'fs';\nimport chokidar from 'chokidar';\n\nexport default function(filename, callback) {\n\n    const watcher = chokidar.watch('.', {\n        persistent: true,\n        ignoreInitial: true,\n        depth: 0\n    });\n\n    const realpath = fs.realpathSync(filename);\n\n    watcher.on('all', (event, filename) => {\n        console.log(event, filename);\n        try {\n            if (realpath === fs.realpathSync(filename)) {\n                callback(filename);\n            }\n        } catch (err) {\n            // pass\n        }\n    });\n}\n"],"file":"watch.js"}